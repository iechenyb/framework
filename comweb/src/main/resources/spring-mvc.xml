<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc  
                http://www.springframework.org/schema/mvc/spring-mvc.xsd  
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd  
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd  
                http://www.springframework.org/schema/oxm
                http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd"
	default-lazy-init="false">
	<context:component-scan base-package="com.cyb.web">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<bean class="com.cyb.swagger.SwaggerConfig" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>text/plain;charset=utf-8</value>
							<value>text/json;charset=utf-8</value>
							<value>application/json;charset=utf-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过5000KB=50M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="50000000" />
		<property name="resolveLazily" value="true"></property>
	</bean>

	<!-- 上传文件异常处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">exception/file_error</prop>
			</props>
		</property>
	</bean>
	<!-- 拦截器 -->
	<mvc:resources mapping="/swagger/**" location="/swagger/" />
	<!-- <mvc:resources mapping="/image/**" location="/image/"/> <mvc:resources 
		mapping="/upload/**" location="/upload/"/> <mvc:resources mapping="/images/**" 
		location="/images/"/> <mvc:resources mapping="/js/**" location="/js/"/> -->
	<!-- <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/js/*</url-pattern> 
		<url-pattern>*.css</url-pattern> <url-pattern>/images/*</url-pattern> </servlet-mapping> -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean class="com.cyb.inteceptor.AllInterceptor" />
		<mvc:interceptor>
			<mvc:mapping path="/user/login.do" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.cyb.inteceptor.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
