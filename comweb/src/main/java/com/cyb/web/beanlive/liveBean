2017-08-22 16:12:16,499 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions:315[main] Loading XML bean definitions from URL [file:/D:/chenyb/myproject/finally/comweb/target/classes/applicationContext-beanlive.xml]
2017-08-22 16:12:16,832 org.springframework.context.support.AbstractApplicationContext.prepareRefresh:510[main] Refreshing org.springframework.context.support.GenericApplicationContext@59cde83a: startup date [Tue Aug 22 16:12:16 CST 2017]; root of context hierarchy
2017-08-22 16:12:16,915 com.cyb.web.beanlive.MyBeanPostProcessor.<init>:15[main] 这是BeanPostProcessor实现类构造器！！
2017-08-22 16:12:16,919 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.<init>:18[main] 这是InstantiationAwareBeanPostProcessorAdapter实现类构造器！！
2017-08-22 16:12:16,927 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons:598[main] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2f1c7c32: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,beanPostProcessor,instantiationAwareBeanPostProcessor,beanFactoryPostProcessor,person,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2017-08-22 16:12:16,928 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation:25[main] InstantiationAwareBeanPostProcessor调用postProcessBeforeInstantiation方法,class com.cyb.web.beanlive.MyBeanFactoryPostProcessor,beanFactoryPostProcessor
2017-08-22 16:12:16,928 com.cyb.web.beanlive.MyBeanFactoryPostProcessor.<init>:19[main] 这是BeanFactoryPostProcessor实现类构造器！！
2017-08-22 16:12:16,930 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.postProcessPropertyValues:42[main] InstantiationAwareBeanPostProcessor调用postProcessPropertyValues方法
2017-08-22 16:12:16,930 com.cyb.web.beanlive.MyBeanPostProcessor.postProcessBeforeInitialization:28[main] BeanPostProcessor接口方法postProcessBeforeInitialization对属性进行更改！
2017-08-22 16:12:16,930 com.cyb.web.beanlive.MyBeanPostProcessor.postProcessAfterInitialization:21[main] BeanPostProcessor接口方法postProcessAfterInitialization对属性进行更改！
2017-08-22 16:12:16,930 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.postProcessAfterInitialization:33[main] InstantiationAwareBeanPostProcessor调用postProcessAfterInitialization方法
2017-08-22 16:12:16,931 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation:25[main] InstantiationAwareBeanPostProcessor调用postProcessBeforeInstantiation方法,class com.cyb.web.beanlive.Person,person
2017-08-22 16:12:16,931 com.cyb.web.beanlive.Person.<init>:29[main] 【构造器】调用Person的构造器实例化
2017-08-22 16:12:16,934 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.postProcessPropertyValues:42[main] InstantiationAwareBeanPostProcessor调用postProcessPropertyValues方法
2017-08-22 16:12:16,947 com.cyb.web.beanlive.Person.setAddress:46[main] 【注入属性】注入属性address
2017-08-22 16:12:16,947 com.cyb.web.beanlive.Person.setName:37[main] 【注入属性】注入属性name
2017-08-22 16:12:16,949 com.cyb.web.beanlive.Person.setPhone:55[main] 【注入属性】注入属性phone
2017-08-22 16:12:16,949 com.cyb.web.beanlive.Person.setBeanName:74[main] 【BeanNameAware接口】调用BeanNameAware.setBeanName()person
2017-08-22 16:12:16,949 com.cyb.web.beanlive.Person.setBeanFactory:67[main] 【BeanFactoryAware接口】调用BeanFactoryAware.setBeanFactory()
2017-08-22 16:12:16,949 com.cyb.web.beanlive.MyBeanPostProcessor.postProcessBeforeInitialization:28[main] BeanPostProcessor接口方法postProcessBeforeInitialization对属性进行更改！
2017-08-22 16:12:16,949 com.cyb.web.beanlive.Person.afterPropertiesSet:81[main] 【InitializingBean接口】调用InitializingBean.afterPropertiesSet()
2017-08-22 16:12:16,949 com.cyb.web.beanlive.Person.myInit:93[main] 【init-method】调用<bean>的init-method属性指定的初始化方法
2017-08-22 16:12:16,949 com.cyb.web.beanlive.MyBeanPostProcessor.postProcessAfterInitialization:21[main] BeanPostProcessor接口方法postProcessAfterInitialization对属性进行更改！
2017-08-22 16:12:16,950 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.postProcessAfterInitialization:33[main] InstantiationAwareBeanPostProcessor调用postProcessAfterInitialization方法
2017-08-22 16:12:16,956 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.postProcessPropertyValues:42[main] InstantiationAwareBeanPostProcessor调用postProcessPropertyValues方法
2017-08-22 16:12:16,958 com.cyb.web.beanlive.MyBeanPostProcessor.postProcessBeforeInitialization:28[main] BeanPostProcessor接口方法postProcessBeforeInitialization对属性进行更改！
2017-08-22 16:12:16,958 com.cyb.web.beanlive.MyBeanPostProcessor.postProcessAfterInitialization:21[main] BeanPostProcessor接口方法postProcessAfterInitialization对属性进行更改！
2017-08-22 16:12:16,959 com.cyb.web.beanlive.MyInstantiationAwareBeanPostProcessor.postProcessAfterInitialization:33[main] InstantiationAwareBeanPostProcessor调用postProcessAfterInitialization方法
2017-08-22 16:12:16,962 com.cyb.inter.InterfaceIOC.testSpringBean:31[main] Person [address=广州, name=张三, phone=159000]-init-method modify
2017-08-22 16:12:16,965 org.springframework.context.support.AbstractApplicationContext.doClose:1042[Thread-0] Closing org.springframework.context.support.GenericApplicationContext@59cde83a: startup date [Tue Aug 22 16:12:16 CST 2017]; root of context hierarchy
2017-08-22 16:12:16,966 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons:444[Thread-0] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2f1c7c32: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,beanPostProcessor,instantiationAwareBeanPostProcessor,beanFactoryPostProcessor,person,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2017-08-22 16:12:16,972 com.cyb.web.beanlive.Person.destroy:87[Thread-0] 【DiposibleBean接口】调用DiposibleBean.destory()
2017-08-22 16:12:16,972 com.cyb.web.beanlive.Person.myDestory:98[Thread-0] 【destroy-method】调用<bean>的destroy-method属性指定的初始化方法
